---
import Header from '@components/Header.astro';
import Footer from '@components/Footer.astro';
import Meta from "@components/Meta.astro";
import {CollectionEntry, getCollection, getEntry, getEntries} from 'astro:content';
import {Image} from "astro:assets";
import DateLocale from "@components/DateLocale.astro";

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  return posts.map((post) => ({
    params: {slug: post.slug},
    props: post,
  }));
}

type Props = CollectionEntry<'posts'>;
const post = Astro.props;
const {Content} = await post.render();

const postAuthors = await getEntries(post.data.authors);
// const postRelated = await getEntries(post.data.related);
// const postCategories = await getEntries(post.data.category);

const authorName = (author): string => author.data.name.last
  ? `${author.data.name.first} ${author.data.name.last}`
  : author.data.name.first;

const authorImg = (author) => author.data.img
  ? `<Image src={author.data.img.src} alt={author.data.img.alt} format="webp" />`.trim()
  : null
;
---
<html lang="en">
<head>
  <Meta title={post.title} description={post.description} image={post.img} format='webp'/>
</head>
<Header/>
<main>
  <div id="MainWrapper">

    <h1>{post.data.title}</h1>
    {
      <article>
        <aside>
          <DateLocale date={post.data.datePublished}/>
          <ul role="group">
            {
              postAuthors.map((author) => (
                <li>
                  <ul>
                    {
                      <li>
                        <a href={`/posts/members/${author.slug}`} target="_blank" rel="noopener noreferrer">
                          {authorName(author)}
                        </a>
                      </li>
                    }
                    {
                      author.data.img &&
                      <li>
                        <Image src={author.data.img.src} alt={author.data.img.alt} format="webp"/>
                      </li>
                    }
                  </ul>
                </li>
              ))
            }
          </ul>
        </aside>
        <Content/>
      </article>
    }
    <hr/>
    <footer>
      a
      <hr />
      a
    </footer>
  </div>
</main>
<Footer/>
<style lang="postcss" is:global>
  p {
    margin: 1em 0;
  }
  article > aside:first-of-type :is(ul, ol, li) {
    list-style: none;
    margin: 0;
    padding: 0;
  }
  article > aside:first-of-type > :is(ul, ol) > li > ul {
    background: green;
    display: flex;
    flex-direction: row;
    gap: 1em;
    img {
      /* set this to be the first item of the flexbox */
      order: 1;
      border-radius: 50%;
      width: 2em;
      height: 2em;
    }
  }
  article > aside:first-of-type > :is(ul, ol) {
    display: flex;
  }
  article > aside:first-of-type > :is(ul, ol) > li:not(:first-of-type)::before {
    content: ", ";
  }
</style>