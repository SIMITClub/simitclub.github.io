@charset "UTF-8";
@import "template.css" layer(template);

@layer fonts {
	@font-face {
		font-family: 'Atkinson';
		src: url('/src/assets/fonts/atkinson-regular.woff') format('woff');
		font-weight: 400;
		font-style: normal;
		font-display: swap;
	}
	@font-face {
		font-family: 'Atkinson';
		src: url('/src/assets/fonts/atkinson-bold.woff') format('woff');
		font-weight: 700;
		font-style: normal;
		font-display: swap;
	}
	@font-face {
		font-family: 'Syncopate';
		src: url('/src/assets/fonts/syncopate-regular.woff2') format('woff2');
		font-weight: 400;
		font-style: normal;
		font-display: swap;
	}
	@font-face {
		font-family: 'Syncopate';
		src: url('/src/assets/fonts/syncopate-bold.woff2') format('woff2');
		font-weight: 700;
		font-style: normal;
		font-display: swap;
	}
	.font-syncopate {
		font-family: Syncopate, sans-serif;
	}
	:root {
		/* https://xgkft.csb.app/ | 320, 1440, 1, 1.75, 16 */
		font-size: clamp(1rem, 0.7857rem + 1.0714vw, 1.75rem);
	}
}

@layer utility {
	.sr-only {
		border: 0;
		padding: 0;
		margin: 0;
		position: absolute !important;
		height: 1px;
		width: 1px;
		overflow: hidden;
		/* IE6, IE7 - a 0 height clip, off to the bottom right of the visible 1px box */
		clip: rect(1px 1px 1px 1px);
		/* maybe deprecated but we need to support legacy browsers */
		clip: rect(1px, 1px, 1px, 1px);
		/* modern browsers, clip-path works inwards from each corner */
		clip-path: inset(50%);
		/* added line to stop words getting smushed together (as they go onto seperate lines and some screen readers do not understand line feeds as a space */
		white-space: nowrap;
	}

	/**
	* https://www.youtube.com/watch?v=LEkFckg7sfw
	* https://codepen.io/kevinpowell/pen/abMLmeO
	*/
	.columns {
		/* User Setting */
		--min-column-size: 160px;
		--column-count: 4;
		--gap: 2rem;

		/* Calculations */
		--breakpoint: calc(var(--min-column-size) * var(--column-count) + (var(--gap) * (var(--column-count) - 1)) );
		--column-size: calc((100% / var(--column-count)) - var(--gap));

		display: grid;
		gap: var(--gap);

		grid-template-columns: repeat(
			auto-fit,
			minmax(
				min(max(var(--column-size), (100% - var(--breakpoint)) * -999 ), 100%),
				1fr
			)
		);
	}
}

@layer layout {
	body {
		min-height: 100svh;
		display: flex;
		flex-direction: column;
	}
	main {
		margin-block: min(1ch, 16px);
	}
	footer {
		margin-top: auto;
	}
}
